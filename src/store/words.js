import { createSlice } from "@reduxjs/toolkit";

//slice to store words generated by the api and the status of a word which is being guessed

export const wordsSlice = createSlice({
    name:"words",

    initialState: {
        wordToGuess: '',
        wordProgress: [],
        wordToDisplay: [],
        lastGuessedLetter: "",
        guessedLetters: [],
        incorrectGuesses: 0,
        guessedLetterClass: "DisplayNone",
        hangmanImageClass: "DisplayNone",
        hangmanMessageClass: "DisplayNone",
    },

    reducers: {
        newWord: (state, action) => {
            //reset states
            state.wordProgress = []
            state.wordToDisplay = []
            state.lastGuessedLetter = ""
            state.guessedLetters = []
            state.incorrectGuesses = 0
            
            state.wordToGuess = action.payload
            let text = state.wordToGuess
            
            //generate an array of each letter of the word
            const characters = text[0].split("")
            state.wordToDisplay = characters

            //generate a blank array to display on game start
            characters.forEach(element => 
                state.wordProgress.push(["*"])
                )
        },

        inputLetter: (state, action) => {
            state.lastGuessedLetter = action.payload[0].toLowerCase()
        },

        guessLetter: (state, action) => {
            state.lastGuessedLetter = ""
            console.log(action.payload.length)
            if(action.payload.length > 0){
                let letter = action.payload[0]
                let guessedLetterArray = state.guessedLetters
                let letterGuessed = 0
                state.guessedLetterClass = "GuessedLetterMessageDisplayed"
                //check previously guessed letters to see if new letter has already been guessed
                for(let i = 0; i < guessedLetterArray.length ; i++){
                    if(guessedLetterArray[i] === letter){
                        letterGuessed = letterGuessed + 1
                        alert("Letter already guessed, please try another")
                    }else{}
                }
                //if letter hasnt already been guessed, push it to the guessed letter array
                if(letterGuessed == 0){
                    state.guessedLetters.push(letter)
                    let blankLetterCount = 0
                    let correctGuess = 0
                    for(let i=0; i < state.wordToDisplay.length ; i++){
                        if(letter == state.wordToDisplay[i]){
                            state.wordProgress[i] = letter
                            correctGuess ++
                        }else if(state.wordProgress[i] == "*"){
                            blankLetterCount ++
                        }
                    }
                    //if the guess is incorrect, then update the count of incorrect guesses
                    if(correctGuess == 0){
                        state.incorrectGuesses ++
                        state.hangmanImageClass = "HangmanImageDisplay"
                        state.hangmanMessageClass = "HangmanImageWordDisplay"
                    }

                    //if there are no more letters to guess, then user has won
                    //if the incorrect guesses have reached 10, the user has lost
                    if(blankLetterCount == 0){
                        alert("Victory!!")
                    }else if(state.incorrectGuesses == 10){
                        alert("You lose!")
                    }
                }
            
            }else{alert("Please input a letter")}


        }
    }
})

export const {newWord, inputLetter, guessLetter
} = wordsSlice.actions

export default wordsSlice.reducer